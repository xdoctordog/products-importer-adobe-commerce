<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!--
        Buffer product model.
    <!-->
    <preference
        for="DoctorDogg\ProductsImporter\Api\Data\BufferProductInterface"
        type="DoctorDogg\ProductsImporter\Model\BufferProduct"
    />

    <!--
        Buffer product repository.
    <!-->
    <preference
        for="DoctorDogg\ProductsImporter\Api\BufferProductInterfaceRepositoryInterface"
        type="DoctorDogg\ProductsImporter\Model\BufferProductInterfaceRepository"
    />

    <!--
        Buffer product provider.
    <!-->
    <preference
        for="DoctorDogg\ProductsImporter\Api\BufferProductProviderInterface"
        type="DoctorDogg\ProductsImporter\Model\Provider\BufferProductProvider"
    />

    <!--
        Message for the RabbitMQ queue which contains the buffer product information.
    <!-->
    <preference
        for="DoctorDogg\ProductsImporter\Api\Data\RabbitMQMessageInterface"
        type="DoctorDogg\ProductsImporter\Model\Data\RabbitMQ\Message"
    />

    <!--
        The product import task planner.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\ProductImportTaskPlannerInterface"
        type="\DoctorDogg\ProductsImporter\Planner\ProductImportTaskPlanner"
    />

    <!--
        The class that checks for the existence of a temporary table for buffer products and can create this table.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\BufferTemporaryTableManagementInterface"
        type="\DoctorDogg\ProductsImporter\Model\BufferTemporaryTableManagement"
    />

    <!--
        The class that imports CSV file into a temporary table for subsequent data import directly into Magento products.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\CsvFileImporterInterface"
        type="\DoctorDogg\ProductsImporter\Model\CsvFileImporter"
    />

    <!--
        Processor which gets the previous state of the additional attributes of the product and then decide which attributes
        should be removed from the Product entity and which should be added and adds them.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\NewProductAttributesProcessorInterface"
        type="\DoctorDogg\ProductsImporter\Model\Processor\NewProductAttributesProcessor"
    />

    <!--
        Read the admin config settings from the DB.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\ConfigReaderInterface"
        type="\DoctorDogg\ProductsImporter\Model\Config\Reader\ConfigReader"
    />

    <!--
        Product attributes updater.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\ProductAttributesUpdaterInterface"
        type="\DoctorDogg\ProductsImporter\Model\Updater\ProductAttributesUpdater"
    />

    <!--
        The class that work with the buffer product entity.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\BufferProductInterfaceManagerInterface"
        type="\DoctorDogg\ProductsImporter\Model\BufferProductInterfaceManager"
    />

    <!--
        Import file model interface.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\Data\ImportFileInterface"
        type="\DoctorDogg\ProductsImporter\Model\ImportFile"
    />

    <!--
        Repository for import file.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Api\ImportFileInterfaceRepositoryInterface"
        type="\DoctorDogg\ProductsImporter\Model\ImportFileInterfaceRepository"
    />

    <!--
        Generator of the temporary products fields.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Model\Generator\ProductGeneratorFieldsByNumberInterface"
        type="\DoctorDogg\ProductsImporter\Model\Generator\ProductGeneratorFieldsByNumber"
    />

    <!--
        Mapper for the autogenerated fields to the real fields ( required core Magento fields + custom fields).
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Model\Mapper\GeneratedFieldToProductAttributeAdminSettingMapperInterface"
        type="\DoctorDogg\ProductsImporter\Model\Mapper\GeneratedFieldToProductAttributeAdminSettingMapper"
    />

    <!--
        Validator of the product before importing.
    <!-->
    <preference
        for="\DoctorDogg\ProductsImporter\Validator\BufferProductValidatorInterface"
        type="\DoctorDogg\ProductsImporter\Validator\BufferProductValidator"
    />

    <!--
        In our module, several validators are created in one thread of the cron job,
        inside which the same entity of this object is used.
        This entity remembers that string number zero has already been validated,
        and when used inside another validator,
        this memory of the previous validation breaks the correct validation of next products.

        That's why we try to make this entity unique - every time Magento tries to create it.

        Q: Why Magento\ImportExport\Model\Import is not shared also?

        A: The Model\Import has the Model\Import\Product inside it, and if it has already been created before,
        then the existing one is returned. And if suddenly the Model\Import turned out to be not unique,
        then the once created Model\Import\Product is returned,
        and this breaks the logic - that each Model\Import must have its own Model\Import\Product
    <!-->
    <type name="DoctorDogg\ProductsImporter\Validator\BufferProductValidatorInterface" shared="false" />
    <type name="Magento\CatalogImportExport\Model\Import\Product" shared="false" />
    <type name="Magento\ImportExport\Model\Import" shared="false" />

    <!--
        Plugin for adding to the buffer product additional information.
    <!-->
    <type name="DoctorDogg\ProductsImporter\Model\BufferProductInterfaceRepository">
        <plugin name="DoctorDogg\ProductsImporter\Plugin\Model\BufferProductInterfaceRepository\Get\After"
                type="DoctorDogg\ProductsImporter\Plugin\Model\BufferProductInterfaceRepository\Get\After"
                sortOrder="100"
        />
    </type>

    <!--
        Buffer product status model.
    <!-->
    <preference
        for="DoctorDogg\ProductsImporter\Api\Data\BufferProductStatusInterface"
        type="DoctorDogg\ProductsImporter\Model\BufferProductStatus"
    />

    <!--
        Buffer product status repository.
    <!-->
    <preference
        for="DoctorDogg\ProductsImporter\Api\BufferProductStatusRepositoryInterface"
        type="DoctorDogg\ProductsImporter\Model\BufferProductStatusRepository"
    />

    <!--
        Lazy loading of the core product repository.
    <!-->
    <type name="DoctorDogg\ProductsImporter\Model\RabbitMQ\Processor\ImportProcessor">
        <arguments>
            <argument name="productRepository" xsi:type="object">Magento\Catalog\Api\ProductRepositoryInterface\Proxy</argument>
        </arguments>
    </type>
</config>
